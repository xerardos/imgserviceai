{
  "tasks": [
    {
      "id": 1,
      "title": "Configurar estructura básica del proyecto con Astro.js",
      "description": "Crear la estructura de carpetas y archivos inicial para el proyecto Astro.js, incluyendo layouts, componentes y páginas principales.",
      "details": "Inicializar un nuevo proyecto de Astro. Crear las carpetas 'src/layouts', 'src/components', 'src/pages'. Crear un layout base 'Layout.astro' y una página 'index.astro'.",
      "testStrategy": "Ejecutar 'npm run dev' y verificar que la página de inicio se renderiza sin errores en el navegador.",
      "status": "done",
      "dependencies": [],
      "priority": "high",
      "subtasks": []
    },
    {
      "id": 2,
      "title": "Crear la sección Héroe interactiva",
      "description": "Desarrollar el componente de la sección Héroe con un titular impactante, un subtitular, un CTA principal y un video/GIF de fondo en bucle.",
      "details": "Crear un componente 'Hero.astro'. Incluir el headline y subheadline del PRD. Añadir un botón CTA principal. Integrar un video o GIF que muestre una transformación Antes/Después. Añadir el texto de 'Social proof'.",
      "testStrategy": "Verificar que la sección se muestra correctamente en la página de inicio, el video se reproduce en bucle y el CTA es visible.",
      "status": "done",
      "dependencies": [
        1
      ],
      "priority": "high",
      "subtasks": []
    },
    {
      "id": 3,
      "title": "Desarrollar la galería de transformaciones básica",
      "description": "Crear un componente para la galería que muestre imágenes de Antes y Después. En la fase MVP, será una galería estática.",
      "details": "Crear un componente 'Gallery.astro'. Mostrar una cuadrícula de imágenes. Cada elemento de la cuadrícula mostrará una imagen 'Antes' y una 'Después'. Usar imágenes de placeholder o buscar imágenes iniciales con Unsplash.",
      "testStrategy": "Verificar que la galería se muestra correctamente en la página de inicio con las imágenes de ejemplo.",
      "status": "done",
      "dependencies": [
        1
      ],
      "priority": "high",
      "subtasks": []
    },
    {
      "id": 5,
      "title": "Asegurar un diseño responsive básico",
      "description": "Aplicar estilos CSS para asegurar que la landing page se vea bien en dispositivos móviles, tabletas y de escritorio.",
      "details": "Usar media queries en los archivos CSS para ajustar los layouts, tamaños de fuente y espaciado para diferentes tamaños de pantalla. Probar en las resoluciones más comunes.",
      "testStrategy": "Usar las herramientas de desarrollador del navegador para simular diferentes dispositivos y verificar que no hay elementos desbordados o ilegibles.",
      "status": "done",
      "dependencies": [
        2,
        3
      ],
      "priority": "medium",
      "subtasks": []
    },
    {
      "id": 6,
      "title": "Implementar botón flotante de WhatsApp",
      "description": "Añadir un botón flotante en la esquina inferior izquierda que enlace al chat de WhatsApp.",
      "details": "Crear un componente 'WhatsAppButton.astro'. El botón debe ser un icono de WhatsApp y estar fijo en la esquina inferior izquierda. El enlace debe ser 'https://wa.me/34635929009'.",
      "testStrategy": "Verificar que el botón aparece en todas las páginas, es visible y el enlace funciona correctamente.",
      "status": "done",
      "dependencies": [],
      "priority": "high",
      "subtasks": []
    },
    {
      "id": 7,
      "title": "Implementar slider Before/After interactivo",
      "description": "Convertir la galería estática en una galería interactiva con un slider para comparar las imágenes de antes y después.",
      "details": "Usar Surreal.js para manipular el DOM y crear un slider que se pueda arrastrar para revelar la imagen 'después' sobre la 'antes'. Aplicar esto a los elementos de la galería existente.",
      "testStrategy": "Verificar que el slider funciona en todos los elementos de la galería, es suave y funciona en dispositivos táctiles.",
      "status": "done",
      "dependencies": [
        3
      ],
      "priority": "high",
      "subtasks": []
    },
    {
      "id": 8,
      "title": "Crear la calculadora de ROI",
      "description": "Desarrollar un componente interactivo que calcule el ahorro de usar el servicio de IA en comparación con una sesión de fotos tradicional.",
      "details": "Crear un componente 'ROICalculator.astro'. Incluir un campo de entrada para que el usuario introduzca el coste de una sesión de fotos. Calcular y mostrar dinámicamente el ahorro. Usar Surreal.js para la interactividad.",
      "testStrategy": "Verificar que el cálculo es correcto y que la actualización del resultado es instantánea.",
      "status": "done",
      "dependencies": [],
      "priority": "medium",
      "subtasks": []
    },
    {
      "id": 9,
      "title": "Desarrollar el quiz personalizado",
      "description": "Crear un wizard multi-step para guiar al usuario y recomendarle un paquete.",
      "details": "Crear un componente 'Quiz.astro'. Implementar una lógica de preguntas y respuestas en varios pasos. Usar Surreal.js para manejar los estados y la lógica condicional.",
      "testStrategy": "Verificar que el quiz fluye correctamente a través de los pasos y que la recomendación final es coherente con las respuestas.",
      "status": "done",
      "dependencies": [],
      "priority": "medium",
      "subtasks": []
    },
    {
      "id": 10,
      "title": "Crear el sistema de paquetes de precios",
      "description": "Desarrollar un componente que muestre los diferentes paquetes de servicios (Starter, Creator, Influencer) con sus características y precios.",
      "details": "Crear un componente 'Pricing.astro'. Mostrar los 3 paquetes definidos en el PRD en una comparativa visual. Cada paquete debe tener un botón CTA.",
      "testStrategy": "Verificar que los 3 paquetes se muestran correctamente con toda su información y que los botones son funcionales.",
      "status": "done",
      "dependencies": [],
      "priority": "high",
      "subtasks": []
    },
    {
      "id": 11,
      "title": "Añadir elementos de urgencia y escasez",
      "description": "Incorporar elementos visuales que creen un sentido de urgencia, como un contador de plazas disponibles.",
      "details": "Crear un componente 'Urgency.astro' o añadir la lógica a un componente existente. Mostrar un contador dinámico (puede ser simulado en el frontend inicialmente).",
      "testStrategy": "Verificar que el contador es visible y parece funcional.",
      "status": "done",
      "dependencies": [],
      "priority": "medium",
      "subtasks": []
    },
    {
      "id": 12,
      "title": "Implementar sección de testimonios",
      "description": "Crear una sección para mostrar testimonios de clientes, preferiblemente en formato de video.",
      "details": "Crear un componente 'Testimonials.astro'. Diseñar una sección para mostrar videos o citas de clientes. Usar placeholders para el contenido inicial.",
      "testStrategy": "Verificar que la sección de testimonios se muestra correctamente.",
      "status": "done",
      "dependencies": [],
      "priority": "medium",
      "subtasks": []
    },
    {
      "id": 13,
      "title": "Optimizar rendimiento (Performance Tuning)",
      "description": "Mejorar la velocidad de carga de la página para alcanzar una puntuación de Lighthouse > 95. Esto incluye la optimización de imágenes y la minimización de assets.",
      "details": "Revisar todas las imágenes y usar el componente <Image> de Astro si es posible para optimización automática. Analizar el CSS y JS para posibles mejoras. El objetivo es un First Contentful Paint < 1.8s.",
      "testStrategy": "Usar las herramientas de desarrollador de Chrome (Lighthouse) para medir la puntuación de rendimiento antes y después de los cambios.",
      "status": "done",
      "dependencies": [],
      "priority": "high",
      "subtasks": []
    },
    {
      "id": 14,
      "title": "Mejorar SEO avanzado",
      "description": "Implementar optimizaciones SEO avanzadas, incluyendo metadatos, schema markup y un sitemap.",
      "details": "Añadir metadatos relevantes (keywords, open graph) en Layout.astro. Implementar Schema.org markup para 'CreativeWork' o 'Service'. Generar un sitemap.xml, posiblemente usando una integración de Astro.",
      "testStrategy": "Usar validadores online para Schema.org y verificar que el sitemap.xml se genera correctamente.",
      "status": "done",
      "dependencies": [],
      "priority": "high",
      "subtasks": []
    },
    {
      "id": 15,
      "title": "Integrar Google Analytics 4",
      "description": "Añadir el script de seguimiento de Google Analytics 4 a la página para empezar a recoger datos de los visitantes.",
      "details": "Añadir el script de GA4 en el <head> del archivo Layout.astro. Se usará un ID de seguimiento de ejemplo por ahora.",
      "testStrategy": "Verificar que el script de GA4 se carga en el head de la página al inspeccionar el código fuente en el navegador.",
      "status": "done",
      "dependencies": [],
      "priority": "low",
      "subtasks": []
    },
    {
      "id": 16,
      "title": "Implementar carrusel de imágenes de fondo en Hero",
      "description": "Hacer que la imagen de fondo de la sección Héroe cambie suavemente entre 5 imágenes diferentes cada 5 segundos.",
      "details": "Buscar 4 imágenes de retratos adicionales. Modificar el componente Hero.astro para implementar una transición suave (fade) entre las 5 imágenes de fondo.",
      "testStrategy": "Verificar que las imágenes rotan cada 5 segundos y que la transición es suave.",
      "status": "done",
      "dependencies": [],
      "priority": "high",
      "subtasks": []
    },
    {
      "id": 17,
      "title": "Implementar efecto de luz en Hero",
      "description": "Añadir un efecto de luz que siga al cursor del ratón sobre la sección Héroe, solo en dispositivos de escritorio.",
      "details": "Usar JavaScript para rastrear el movimiento del ratón y actualizar la posición de un elemento que simule una luz (ej. con radial-gradient). Añadir una media query o una comprobación en JS para desactivarlo en móviles.",
      "testStrategy": "Verificar que el efecto de luz sigue al cursor en escritorio y que no aparece en la vista móvil.",
      "status": "done",
      "dependencies": [
        16
      ],
      "priority": "low",
      "subtasks": []
    },
    {
      "id": 18,
      "title": "Implementar Sección Feature 1: Control Creativo (GSAP)",
      "description": "Crear la sección de característica 'Control Creativo' con animación de scroll y parallax usando GSAP.",
      "details": "",
      "testStrategy": "",
      "status": "done",
      "dependencies": [],
      "priority": "high",
      "subtasks": []
    },
    {
      "id": 19,
      "title": "Implementar Sección Feature 2: Eficiencia y Versatilidad (GSAP)",
      "description": "Crear la sección de característica 'Eficiencia y Versatilidad' con animación de scroll y parallax usando GSAP.",
      "details": "",
      "testStrategy": "",
      "status": "done",
      "dependencies": [],
      "priority": "high",
      "subtasks": []
    },
    {
      "id": 20,
      "title": "Implementar Sección Feature 3: Calidad y Realismo (GSAP)",
      "description": "Crear la sección de característica 'Calidad y Realismo' con animación de scroll y parallax usando GSAP.",
      "details": "",
      "testStrategy": "",
      "status": "done",
      "dependencies": [],
      "priority": "high",
      "subtasks": []
    },
    {
      "id": 21,
      "title": "Implementar Sección Feature 4: Explora Estilos (View Transitions)",
      "description": "Crear la sección interactiva 'Explora Estilos' usando Astro View Transitions.",
      "details": "",
      "testStrategy": "",
      "status": "done",
      "dependencies": [],
      "priority": "medium",
      "subtasks": []
    },
    {
      "id": 22,
      "title": "Implementar Sección Feature 5: El Proceso Detallado (View Transitions)",
      "description": "Crear la sección interactiva 'El Proceso Detallado' usando Astro View Transitions.",
      "details": "",
      "testStrategy": "",
      "status": "done",
      "dependencies": [],
      "priority": "medium",
      "subtasks": []
    },
    {
      "id": 23,
      "title": "Rediseñar interacción de la sección 'Explora Estilos'",
      "description": "Cambiar el efecto de acordeón por un efecto de superposición tipo Netflix al pasar el ratón sobre las tarjetas de estilo.",
      "details": "Modificar el HTML y CSS de FeatureStyles.astro para que la descripción y el botón aparezcan sobre la imagen en el estado hover. Eliminar el script de JS actual, ya que se puede lograr solo con CSS.",
      "testStrategy": "Verificar que la información aparece suavemente sobre la imagen al pasar el ratón y que el diseño es responsive.",
      "status": "done",
      "dependencies": [
        21
      ],
      "priority": "high",
      "subtasks": []
    }
  ]
}